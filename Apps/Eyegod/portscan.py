import socket
from contextlib import closing
import concurrent.futures

# The target host to scan
target_host = 'stolenh0ff.github.io'

# A dictionary to map port numbers to service names
services = {
    21: 'FTP',
    22: 'SSH',
    23: 'Telnet',
    25: 'SMTP',
    80: 'HTTP',
    110: 'POP3',
    143: 'IMAP',
    443: 'HTTPS',
    465: 'SMTPS',
    587: 'SMTP',
    993: 'IMAPS',
    995: 'POP3S',
    3306: 'MySQL',
    5432: 'PostgreSQL',
    8000: 'HTTP',
    8080: 'HTTP',
    8443: 'HTTPS',
    8888: 'HTTP'
}

def scan_port(port):
    with closing(socket.socket(socket.AF_INET, socket.SOCK_STREAM)) as sock:
        sock.settimeout(1)
        if sock.connect_ex((target_host, port)) == 0:
            service_name = services.get(port, 'Unknown')
            print(f"Port {port} is open, Service: {service_name}")

with concurrent.futures.ThreadPoolExecutor(max_workers=100) as executor:
    # Scan all ports
    for port in range(1, 65536):
        executor.submit(scan_port, port)
